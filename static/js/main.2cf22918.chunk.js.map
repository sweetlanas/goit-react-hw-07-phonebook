{"version":3,"sources":["components/PhoneBookListItem/PhoneBookListItem.module.css","components/PhoneBookListItem/PhoneBookListItem.jsx","redux/rtk/contacts-api.js","redux/selectors.js","helpers/filterContacts.js","components/PhoneBookList/PhoneBookList.jsx","redux/actions.js","components/PhoneBookForm/PhoneBookForm.jsx","redux/rtk/filter-contacts.js","components/PhoneBookFilter/PhoneBookFilter.jsx","App.js","redux/rtk/rtk-store.js","index.js","components/PhoneBookForm/PhoneBookForm.module.css"],"names":["module","exports","PhoneBookListItem","name","number","id","onDeleteContact","className","s","phoneBookListItem","contact","contactBtn","onClick","contactsApi","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getContacts","query","providesTags","addContacts","mutation","url","method","body","invalidatesTags","deleteContacts","contactId","useGetContactsQuery","useAddContactsMutation","useDeleteContactsMutation","getFilter","state","filter","filterContacts","contacts","obj","toLowerCase","includes","trim","PhoneBookList","data","deleteContact","useSelector","map","addContact","createAction","payload","shortId","generate","changeFilter","connect","items","dispatch","onSubmit","actions","useDispatch","useState","setName","setNumber","handleSetUserInfo","e","target","value","form","preventDefault","action","htmlFor","input","onInput","type","pattern","title","required","addBtn","handleFilter","createReducer","_","props","filterValue","onSetFilter","App","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,kBAAoB,6CAA6C,QAAU,mCAAmC,WAAa,wC,2KCc9HC,EAbW,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,gBAC7C,OACE,qBAAIC,UAAWC,IAAEC,kBAAjB,UACE,oBAAGF,UAAWC,IAAEE,QAAhB,UACGP,EADH,KACWC,KAEX,wBAAQG,UAAWC,IAAEG,WAAYC,QAASN,EAAiBD,GAAIA,EAA/D,wB,uBCNOQ,EAAcC,YAAU,CACnCC,YAAa,cACbC,SAAU,CAAC,YACXC,UAAWC,YAAe,CACxBC,QAAS,wDAEXC,UAAW,SAACC,GAAD,MAAc,CACvBC,YAAaD,EAAQE,MAAM,CACzBA,MAAO,iBAAM,aACbC,aAAc,CAAC,cAEjBC,YAAaJ,EAAQK,SAAS,CAC5BH,MAAO,SAACb,GAAD,MAAc,CACnBiB,IAAK,YACLC,OAAQ,OACRC,KAAK,eAAMnB,KAEboB,gBAAiB,CAAC,cAEpBC,eAAgBV,EAAQK,SAAS,CAC/BH,MAAO,SAACS,GAAD,MAAgB,CACrBL,IAAI,aAAD,OAAeK,GAClBJ,OAAQ,WAEVE,gBAAiB,CAAC,kBAMtBG,EAGEpB,EAHFoB,oBACAC,EAEErB,EAFFqB,uBACAC,EACEtB,EADFsB,0BChCWC,EAAY,SAACC,GAAD,OAAWA,EAAMC,QCI3BC,MANf,SAAwBC,EAAUF,GAChC,OAAOE,EAASF,QAAO,SAAAG,GACrB,OAAOA,EAAItC,KAAKuC,cAAcC,SAASL,EAAOI,cAAcE,YCiCjDC,EAzBO,WACpB,IAAQC,EAASb,IAATa,KAER,EAAwBX,IAAjBY,EAAP,oBAEMT,EAASU,YAAYZ,GAE3B,OACE,6BACGU,GACCP,EAAeO,EAAMR,GAAQW,KAAI,YAA2B,IAAxB9C,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GAChD,OACE,cAAC,EAAD,CACEC,gBAAiB,kBAAMyC,EAAc1C,IAErCF,KAAMA,EACNC,OAAQA,EACRC,GAAIA,GAHCA,S,wCCNJ,GAAE6C,WAfEC,YAAa,eAAe,YAC7C,MAAO,CACLC,QAAS,CACPjD,KAH+D,EAAnBA,KAI5CC,OAJ+D,EAAbA,OAKlDC,GAAIgD,IAAQC,gBAUWP,cALPI,YAAa,kBAKSI,aAHvBJ,YAAa,mBC6DlC,IAUeK,eAVS,SAACnB,GACvB,MAAO,CACLG,SAAUH,EAAMoB,UAGO,SAACC,GAAD,MAAe,CACxCC,SAAU,gBAAGxD,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACRsD,EAASE,EAAQV,WAAW,CAAE/C,OAAMC,gBAGzBoD,EAhFf,YAAqC,EAAZhB,SAAa,IAC9BkB,EAAWG,cAEjB,EAAwBC,mBAAS,IAAjC,mBAAO3D,EAAP,KAAa4D,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO1D,EAAP,KAAe4D,EAAf,KAEA,EAAqB9B,IAAdgB,EAAP,oBAEMe,EAAoB,SAACC,GACzB,OAAQA,EAAEC,OAAOhE,MACf,IAAK,OACH4D,EAAQG,EAAEC,OAAOC,OACjB,MAEF,IAAK,SACHJ,EAAUE,EAAEC,OAAOC,OACnB,MAEF,QACE,SAkBN,OACE,uBAAM7D,UAAWC,IAAE6D,KAAMV,SAfN,SAACO,GACpBA,EAAEI,iBAEFpB,EAAW,CAAE/C,OAAMC,WAMnBsD,EAASE,EAAQV,WAAW,CAAE/C,OAAMC,YACpC2D,EAAQ,IACRC,EAAU,KAIuCO,OAAO,GAAxD,UACE,wBAAOC,QAAQ,GAAf,UACE,qCACA,uBACEjE,UAAWC,IAAEiE,MACbC,QAAST,EACTU,KAAK,OACLxE,KAAK,OACLiE,MAAOjE,EACPyE,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAON,QAAQ,GAAf,UACE,uCACA,uBACEjE,UAAWC,IAAEiE,MACbC,QAAST,EACTU,KAAK,MACLxE,KAAK,SACLiE,MAAOhE,EACPwE,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQvE,UAAWC,IAAEuE,OAArB,+B,OCrEOC,EAAe7B,YAAa,2BAE5Bb,EAAS2C,YAAc,GAAD,eAChCD,GAAe,SAACE,EAAD,YAAM9B,YC0BTI,eARS,SAACnB,EAAO8C,GAAR,MAAmB,CACzCC,YAAa/C,EAAMC,WAGM,SAACoB,GAAD,MAAe,CACxC2B,YAAa,SAACnB,GAAD,OAAOR,EAASsB,EAAad,EAAEC,OAAOC,YAGtCZ,EAzBS,SAAC,GAAkC,IAAhC6B,EAA+B,EAA/BA,YAAaD,EAAkB,EAAlBA,YACtC,OACE,mCACE,kCACE,sDACA,uBACE7E,UAAWC,IAAEiE,MACbtE,KAAK,SACLuE,QAASW,EACTV,KAAK,OACLP,MAAOgB,YCCFE,I,EAAAA,EAZf,WACE,OACE,sBAAK/E,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCPOgF,EAAQC,YAAe,CAClCC,SAAO,mBACJ5E,EAAYE,YAAcF,EAAY4E,SADlC,uBAELnD,GAFK,GAIPoD,WAAY,SAACC,GAAD,4BACPA,KADO,CAEV9E,EAAY6E,gBAIhBE,YAAeL,EAAM7B,UCTrBmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,U,kBCZ1BjG,EAAOC,QAAU,CAAC,KAAO,4BAA4B,OAAS,8BAA8B,MAAQ,gC","file":"static/js/main.2cf22918.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookListItem\":\"PhoneBookListItem_phoneBookListItem__1Uv-k\",\"contact\":\"PhoneBookListItem_contact__2FJw6\",\"contactBtn\":\"PhoneBookListItem_contactBtn__h2rVI\"};","import s from \"./PhoneBookListItem.module.css\";\r\n\r\nconst PhoneBookListItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.phoneBookListItem}>\r\n      <p className={s.contact}>\r\n        {name}: {number}\r\n      </p>\r\n      <button className={s.contactBtn} onClick={onDeleteContact} id={id}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PhoneBookListItem;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: \"contactsApi\",\r\n  tagTypes: [\"contacts\"],\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: \"https://612813d186a213001729f85b.mockapi.io/api/v1/\",\r\n  }),\r\n  endpoints: (builder) => ({\r\n    getContacts: builder.query({\r\n      query: () => \"/contacts\",\r\n      providesTags: [\"contacts\"],\r\n    }),\r\n    addContacts: builder.mutation({\r\n      query: (contact) => ({\r\n        url: \"/contacts\",\r\n        method: \"POST\",\r\n        body: { ...contact },\r\n      }),\r\n      invalidatesTags: [\"contacts\"],\r\n    }),\r\n    deleteContacts: builder.mutation({\r\n      query: (contactId) => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: \"DELETE\",\r\n      }),\r\n      invalidatesTags: [\"contacts\"],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useAddContactsMutation,\r\n  useDeleteContactsMutation,\r\n} = contactsApi;\r\n","export const getContacts = (state) => state.contacts;\r\n\r\nexport const getFilter = (state) => state.filter;\r\n","function filterContacts(contacts, filter) {\r\n  return contacts.filter(obj => {\r\n    return obj.name.toLowerCase().includes(filter.toLowerCase().trim());\r\n  });\r\n}\r\n\r\nexport default filterContacts;\r\n","import { useSelector } from \"react-redux\";\r\nimport PhoneBookListItem from \"../PhoneBookListItem/PhoneBookListItem\";\r\n\r\nimport {\r\n  useGetContactsQuery,\r\n  useDeleteContactsMutation,\r\n} from \"../../redux/rtk/contacts-api\";\r\nimport { getFilter } from \"../../redux/selectors\";\r\nimport filterContacts from \"../../helpers/filterContacts\";\r\n\r\nconst PhoneBookList = () => {\r\n  const { data } = useGetContactsQuery();\r\n\r\n  const [deleteContact] = useDeleteContactsMutation();\r\n\r\n  const filter = useSelector(getFilter);\r\n\r\n  return (\r\n    <ul>\r\n      {data &&\r\n        filterContacts(data, filter).map(({ name, number, id }) => {\r\n          return (\r\n            <PhoneBookListItem\r\n              onDeleteContact={() => deleteContact(id)}\r\n              key={id}\r\n              name={name}\r\n              number={number}\r\n              id={id}\r\n            />\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PhoneBookList;\r\n","import shortId from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contact/add\", ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      name,\r\n      number,\r\n      id: shortId.generate(),\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction(\"contact/delete\");\r\n\r\nconst changeFilter = createAction(\"contact/filter\");\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { connect, useDispatch } from \"react-redux\";\r\nimport s from \"./PhoneBookForm.module.css\";\r\nimport actions from \"../../redux/actions\";\r\nimport { useState } from \"react\";\r\nimport { useAddContactsMutation } from \"../../redux/rtk/contacts-api\";\r\n\r\nfunction PhoneBookForm({ contacts }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const [addContact] = useAddContactsMutation();\r\n\r\n  const handleSetUserInfo = (e) => {\r\n    switch (e.target.name) {\r\n      case \"name\":\r\n        setName(e.target.value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(e.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    addContact({ name, number });\r\n\r\n    // if (contacts.some((el) => el.name === name)) {\r\n    //   alert(` ${name} is already in contacts!`);\r\n    //   return;\r\n    // }\r\n    dispatch(actions.addContact({ name, number }));\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit} action=\"\">\r\n      <label htmlFor=\"\">\r\n        <p>Name</p>\r\n        <input\r\n          className={s.input}\r\n          onInput={handleSetUserInfo}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label htmlFor=\"\">\r\n        <p>Number</p>\r\n        <input\r\n          className={s.input}\r\n          onInput={handleSetUserInfo}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className={s.addBtn}>Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.items,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: ({ name, number }) =>\r\n    dispatch(actions.addContact({ name, number })),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBookForm);\r\n","import { createReducer, createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const handleFilter = createAction(\"contacts/filterContacts\");\r\n\r\nexport const filter = createReducer(\"\", {\r\n  [handleFilter]: (_, { payload }) => payload,\r\n});\r\n","import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport s from \"../PhoneBookForm/PhoneBookForm.module.css\";\r\n\r\nimport { handleFilter } from \"../../redux/rtk/filter-contacts\";\r\n\r\nconst PhonebookFilter = ({ onSetFilter, filterValue }) => {\r\n  return (\r\n    <>\r\n      <label>\r\n        <p>Find contacts by name</p>\r\n        <input\r\n          className={s.input}\r\n          name=\"filter\"\r\n          onInput={onSetFilter}\r\n          type=\"text\"\r\n          value={filterValue}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  filterValue: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSetFilter: (e) => dispatch(handleFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookFilter);\r\n","import \"./App.css\";\nimport PhoneBookList from \"./components/PhoneBookList/PhoneBookList\";\nimport PhoneBookForm from \"./components/PhoneBookForm/PhoneBookForm\";\nimport PhonebookFilter from \"./components/PhoneBookFilter/PhoneBookFilter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <PhoneBookForm />\n      <h2>Contacts</h2>\n      <PhonebookFilter />\n      <PhoneBookList />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { contactsApi } from \"./contacts-api\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\r\nimport { filter } from \"./filter-contacts\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter,\r\n  },\r\n  middleware: (getDefaultMiddleware) => [\r\n    ...getDefaultMiddleware(),\r\n    contactsApi.middleware,\r\n  ],\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./redux/rtk/rtk-store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhoneBookForm_form__19bxg\",\"addBtn\":\"PhoneBookForm_addBtn__130ZJ\",\"input\":\"PhoneBookForm_input__3GFND\"};"],"sourceRoot":""}